
plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.moddev.legacyforge' version '2.0.74'
}

repositories {
    maven {
        url 'https://cursemaven.com'
    }
    mavenCentral()
    maven { url "https://maven.blamejared.com/" }
    maven { url "https://modmaven.dev" }
}

group = 'net.abraxator.moresnifferflowers'
archivesBaseName = 'MoreSnifferFlowers-'+mc_version+'-Forge'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"


    legacyForge {
        version = project.forge_version

        parchment {
            mappingsVersion = project.parchment_mappings_version
            minecraftVersion = project.parchment_minecraft_version
        }

        runs {
            configureEach {
                gameDirectory = layout.projectDir.dir("runs/$name")
                systemProperty 'forge.logging.console.level', 'debug'
                systemProperty 'forge.logging.markers', 'REGISTRIES'

            }
            client {
                client()
            }
            clientAuth {
                client()
                devLogin = true
                gameDirectory = layout.projectDir.dir("runs/client")
            }
            data {
                data()
                programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
            }
            server {
                server()
            }
        }
        mods {
            more_sniffer_flowers {
                sourceSet(sourceSets.main)
            }
        }
    }

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    //jei
    compileOnlyApi("mezz.jei:jei-${mc_version}-forge-api:${jei_version}")
    modRuntimeOnly("mezz.jei:jei-${mc_version}-forge:${jei_version}")
    
    //mixin
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    implementation 'org.jetbrains:annotations:24.1.0'

    //quark
    compileOnly("curse.maven:Quark-${quark_id}:${quark_version}")

    //right click harvest
    compileOnly("curse.maven:RightClickHarvest-${RCH_id}:${RCH_version}")
}

mixin {
    add sourceSets.main, 'more_sniffer_flowers.mixins.refmap.json'
    config 'more_sniffer_flowers.mixins.json'
}

final manifestAttributes = [
        'Specification-Title'   : 'MoreSnifferFlowers',
        'Specification-Vendor'  : 'AbraXator',
        'Specification-Version' : '1',
        'Implementation-Title'  : project.name,
        'Implementation-Version': project.jar.archiveVersion,
        'Implementation-Vendor' : 'AbraXator'
]

jar {
    manifest.attributes(manifestAttributes)
    finalizedBy('reobfJar')
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}